services:
  vote:
    image: rssureshkumar/voting-app-vote:arm64
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      ports:
        - target: 80
          published: 5000
          protocol: tcp
          mode: host
    networks:
      - vote-net

  result:
    image: rssureshkumar/voting-app-result:arm64
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      ports:
        - target: 80
          published: 5001
          protocol: tcp
          mode: host
    networks:
      - vote-net

  ui:
    image: rssureshkumar/voting-app-ui:arm64
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
      ports:
        - target: 80
          published: 5002
          protocol: tcp
          mode: host
    networks:
      - vote-net

  worker:
    image: rssureshkumar/voting-app-worker:arm64
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - vote-net

  redis:
    image: redis:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - vote-net

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: voteapp
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - vote-net

  visualizer:
    image: alexellis2/visualizer-arm:latest
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  vote-net:
    driver: overlay
